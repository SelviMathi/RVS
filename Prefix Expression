#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

#define CAPACITY 10

int stack[CAPACITY];
int top = -1;

void push(int num) {
    if (top == CAPACITY - 1) {
        printf("Stack is full\n");
    } else {
        stack[++top] = num;
    }
}

int pop() {
    if (top == -1) {
        printf("Stack is empty\n");
        return -1;
    } else {
        return stack[top--];
    }
}

int Prefix(char *expression) {
    int length = strlen(expression);
    if (expression[length - 1] == '\n') {
        expression[length - 1] = '\0';
    }
    for (int i = length - 1; i >= 0; i--) {
        char ch = expression[i];
        if (isdigit(ch)) {
            push(ch - '0');
        } else if (ch == '+' || ch == '-' || ch == '*' || ch == '/') {
            int val1 = pop();
            int val2 = pop();
            switch (ch) {
                case '+':
                    push(val1 + val2);
                    break;
                case '-':
                    push(val1 - val2);
                    break;
                case '*':
                    push(val1 * val2);
                    break;
                case '/':
                    push(val1 / val2);
                    break;
            }
        }
    }
    return pop();
}

int main() {
    char expression[100];
    fgets(expression, sizeof(expression), stdin);
    printf("%d\n", Prefix(expression));
    return 0;
}
